{
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "Event Planner Swagger",
      "description": "Event Planner API",
      "license": {
        "name": "MIT",
        "url": "https://opensource.org/licenses/MIT"
      }
    },
    "host": "localhost:8080",
    "basePath": "/",
    "tags": [
      {
        "name": "Users",
        "description": "API for users in the system"
      }
    ],
    "schemes": ["http"],
    "consumes": ["application/json"],
    "produces": ["application/json"],
    "paths": {
        "/api/users/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "ID of user that we want to find",
                    "type": "string"
                }
            ],
            "get": {
                "tags": ["Users"],
                "summary": "Get one users in system",
                "responses": {
                "200": {
                        "description": "OK",
                        "schema": {
                        "$ref": "#/definitions/User"
                        }
                    }
                }
            },
            "put": {
                "tags": ["Users"],
                "summary": "Updates a user",
                "parameters":[
                    {
                        "name": "user",
                        "in": "body",
                        "description": "User that we want to update",
                        "schema": {
                          "$ref": "#/definitions/User"
                        } 
                    }
                ],
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "User is updated",
                        "schema": {
                        "$ref": "#/definitions/User"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Users"],
                "summary": "Deletes a user",
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "User is Deleted",
                        "schema": {
                        "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "tags": ["Users"],
                "summary": "Get all users in system",
                "responses": {
                "200": {
                    "description": "OK",
                    "schema": {
                    "$ref": "#/definitions/User"
                    }
                }
                }
            },
            "post": {
                "tags": ["Users"],
                "summary": "Inserts a user",
                "parameters":[
                    {
                        "name": "user",
                        "in": "body",
                        "description": "User that we want to create",
                        "schema": {
                          "$ref": "#/definitions/User"
                        } 
                    }
                ],
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "New user is created",
                        "schema": {
                        "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        }
      },
      "definitions": {
        "User": {
          "required": ["firstName", "_id"],
          "properties": {
            "firstname": {
              "type": "string"
            },
            "lastname": {
              "type": "string"
            },
            "address" : {
                "type": "string"
            },
            "postal" : {
                "type": "integer"
            },
            "number" : {
                "type": "integer"
            },
            "email" : {
                "type": "string"
            },
            "password":{
                "type":"string"
            }
          }
        }
      }
  }